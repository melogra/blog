(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{556:function(t,a,v){"use strict";v.r(a);var _=v(1),s=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h3",{attrs:{id:"动态规划"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#动态规划"}},[t._v("#")]),t._v(" 动态规划")]),t._v(" "),v("h4",{attrs:{id:"基本思想"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基本思想"}},[t._v("#")]),t._v(" 基本思想")]),t._v(" "),v("p",[t._v("动态规划是多阶段的决策过程，每步求解的问题是后阶段求解问题的子问题，每步决策依赖于以前步骤的决策结果")]),t._v(" "),v("h5",{attrs:{id:"优化原则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#优化原则"}},[t._v("#")]),t._v(" 优化原则")]),t._v(" "),v("p",[t._v("一个最优决策序列的任何子序列一定是相对于子序列的初始和结束状态的最优决策序列。当子序列变得更优时，整个决策序列也会变得更优。")]),t._v(" "),v("h5",{attrs:{id:"注意"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),v("p",[t._v("不满足优化原则的问题不能使用动态规划算法求解。")]),t._v(" "),v("h4",{attrs:{id:"设计要素"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#设计要素"}},[t._v("#")]),t._v(" 设计要素")]),t._v(" "),v("ul",[v("li",[t._v("问题建模，优化的目标函数是什么，约束条件是什么")]),t._v(" "),v("li",[t._v("如何划分子问题")]),t._v(" "),v("li",[t._v("问题的优化函数值与子问题的优化函数值存在着什么依赖关系（递推方程）")]),t._v(" "),v("li",[t._v("是否满足优化原则")]),t._v(" "),v("li",[t._v("最小子问题怎么界定，其优化函数值等于什么")])]),t._v(" "),v("h4",{attrs:{id:"例子"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),v("ul",[v("li",[t._v("最短路径问题")]),t._v(" "),v("li",[t._v("矩阵链相乘")]),t._v(" "),v("li",[t._v("图像压缩")]),t._v(" "),v("li",[t._v("最大子段和")]),t._v(" "),v("li",[t._v("最优二叉搜索树")]),t._v(" "),v("li",[t._v("RNA二级结构预测")]),t._v(" "),v("li",[t._v("序列比对")])])])}),[],!1,null,null,null);a.default=s.exports}}]);