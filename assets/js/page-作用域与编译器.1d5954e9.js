(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{509:function(v,_,t){"use strict";t.r(_);var a=t(1),e=function(v){v.options.__data__block__={mermaid_382ee18b:"graph LR\nVariableDeclaration --\x3e Identifier[Identifier: a]\nVariableDeclaration --\x3e AssignmentExpression --\x3e NumericLiteral[NumericLiteral: 2]\n"}},r=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"作用域与编译器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#作用域与编译器"}},[v._v("#")]),v._v(" 作用域与编译器")]),v._v(" "),t("h2",{attrs:{id:"作用域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[v._v("#")]),v._v(" 作用域")]),v._v(" "),t("p",[v._v("几乎所有编程语言的基本功能之一，就是能够存储变量中的值，并且能够对其进行访问和修改。这种对变量的存储和访问的能力将"),t("strong",[v._v("状态")]),v._v("带给了程序。")]),v._v(" "),t("p",[v._v("变量存储在哪里、如何找到它们、如何修改它的值······这些问题使得我们需要设计一套规则来存储变量，并在这之后访问变量，"),t("strong",[v._v("这套规则称为作用域")]),v._v("。")]),v._v(" "),t("h3",{attrs:{id:"编译原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编译原理"}},[v._v("#")]),v._v(" 编译原理")]),v._v(" "),t("p",[v._v("尽管"),t("code",[v._v("JavaScript")]),v._v("通常被归类为“动态”或“解释执行”的语言，事实上她是一门编译语言。但与传统编译语言不同，她不是提前编译的，编译结果也不能在分布式系统中传播。")]),v._v(" "),t("blockquote",[t("p",[v._v("传统编译语言流程：")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("分词/词法分析(Tokenizing/Lexing)")]),v._v(" "),t("p",[v._v("这个过程会将由字符组成的字符串分解为（对编程语言来说）有意义的代码块，这些代码块被称为词法单元（token）。例如，考虑程序"),t("code",[v._v("let a = 2;")]),v._v(",这段程序会被分解为"),t("code",[v._v("let")]),v._v("、"),t("code",[v._v("a")]),v._v("、"),t("code",[v._v("=")]),v._v("、"),t("code",[v._v("2")]),v._v("、"),t("code",[v._v(";")]),v._v("。")])]),v._v(" "),t("li",[t("p",[v._v("语法分析(Parsing)")]),v._v(" "),t("p",[v._v("这个过程会将词法单元流（token流数组）转换为一个由元素逐级嵌套组成的代表了程序语法结构的树，称之为"),t("strong",[v._v("抽象语法树（Abstract Syntax Tree, AST）")]),v._v("。"),t("code",[v._v("let a = 2;")]),v._v("这段程序的AST中可能存在一个***VariableDeclaration***的顶级节点，然后会有一个***Identifier***的子节点，它的值是"),t("code",[v._v("a")]),v._v("，以及一个***AssignmentExpression***的子节点，***AssignmentExpression***节点有一个***NumericLiteral***的子节点，它的值是"),t("code",[v._v("2")]),v._v("。")]),v._v(" "),t("Mermaid",{attrs:{id:"mermaid_382ee18b",graph:v.$dataBlock.mermaid_382ee18b}})],1),v._v(" "),t("li",[t("p",[v._v("代码生成")]),v._v(" "),t("p",[v._v("将AST转换为可执行代码的过程称为代码生成。这个过程与语言、目标平台息息相关。简单来说，代码生成过程就是将AST转换为一组机器指令，可以创建一个叫做"),t("code",[v._v("a")]),v._v("的变量（包括分配内存等底层操作），并将值 "),t("code",[v._v("2")]),v._v(" 存储在 "),t("code",[v._v("a")]),v._v(" 中。")])])])]),v._v(" "),t("p",[v._v("与其他传统编译器相比，JavaScript引擎可能要更加复杂，比如，在"),t("strong",[v._v("语法分析")]),v._v("和"),t("strong",[v._v("代码生成")]),v._v("阶段有特定的步骤对运行性能进行优化，包括"),t("strong",[v._v("对冗余元素进行优化")]),v._v("等。")]),v._v(" "),t("p",[v._v("然而，JavaScript引擎不会像其他编译器一样有太多的时间进行优化，因为JavaScript的编译过程通常发生在代码执行的前几微秒内甚至更短。在这期间，JavaScript 引擎用尽了各种办法(比如 "),t("em",[t("strong",[v._v("JIT")])]),v._v("，可以延迟编译甚至实施重编译)来保证性能最佳。")]),v._v(" "),t("p",[v._v("总的来说，"),t("strong",[v._v("任何JavaScript代码在执行前都需要编译")]),v._v("（通常就在执行前），JavaScript编译器会对程序进行编译，并准备执行它，通常马上就会执行。")]),v._v(" "),t("h2",{attrs:{id:"理解作用域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#理解作用域"}},[v._v("#")]),v._v(" 理解作用域")]),v._v(" "),t("blockquote",[t("p",[v._v("参与JavaScript代码的编译和执行的几个对象：")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("引擎")]),v._v(" "),t("p",[v._v("从头到尾负责整个JavaScript程序的编译和执行过程")])]),v._v(" "),t("li",[t("p",[v._v("编译器")]),v._v(" "),t("p",[v._v("负责语法分析和代码生成")])]),v._v(" "),t("li",[t("p",[v._v("作用域")]),v._v(" "),t("p",[v._v("负责收集并维护由所有声明的标识符（变量）组成的一系列查询，并实施一套非常严格的规则，确定当前执行的代码对这些标识符的访问权限")])])])]),v._v(" "),t("p",[v._v("以"),t("code",[v._v("var a = 2;")]),v._v("这段代码为例，编译器会对其进行词法分析，得到token流，然后抽象成AST，在进行代码生成时，会进行如下操作：")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("遇到"),t("code",[v._v("var a")]),v._v("，编译器会询问作用域是否已有一个相同名称的变量存在于相同作用域的集合中，")]),v._v(" "),t("p",[v._v("如果有，则忽略该声明并继续编译；")]),v._v(" "),t("p",[v._v("如果没有，它会要求作用域在当前作用域的集合中声明一个新的变量，命名为 "),t("code",[v._v("a")]),v._v("。")])]),v._v(" "),t("li",[t("p",[v._v("接下来编译器会为引擎生成运行时所需的代码，这些代码被用来处理 "),t("code",[v._v("a = 2")]),v._v(" 这个赋值操作。")]),v._v(" "),t("p",[v._v("引擎运行时会首先询问作用域，在当前的作用域集合中是否存在名为 "),t("code",[v._v("a")]),v._v(" 的变量，如果有，则使用这个变量，否则继续查找。")]),v._v(" "),t("p",[v._v("如果最终找到变量 "),t("code",[v._v("a")]),v._v("，就会将"),t("code",[v._v("2")]),v._v(" 赋值给它，否则引擎抛出一个异常。")])])]),v._v(" "),t("p",[t("strong",[v._v("总结：变量的赋值操作会进行两个动作，首先编译器会在当前作用域中声明一个变量(如果之前没有声明过)，然后在运行时引擎会在作用域中查找该变量，如果能够找到就会对它赋值。")])]),v._v(" "),t("FlowChart",{attrs:{id:"flowchart-64a57068","data-code":"st%3D%3Estart%3A%20%E5%BC%80%E5%A7%8B%0A%0Atokenizing%3D%3Eoperation%3A%20%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90%0Aparsing%3D%3Eoperation%3A%20%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90%0AgenCode%3D%3Eoperation%3A%20%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%0A%0Ae%3D%3Eend%3A%20%E7%BB%93%E6%9D%9F%0A%0Ast-%3Etokenizing-%3Eparsing-%3EgenCode%0A%0A%0A%0A",preset:"vue"}}),t("h3",{attrs:{id:"lhs和rhs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lhs和rhs"}},[v._v("#")]),v._v(" LHS和RHS")]),v._v(" "),t("p",[v._v("为便于记忆，可以分别认为"),t("strong",[v._v("LHS")]),v._v("和"),t("strong",[v._v("RHS")]),v._v("是一个赋值操作的左侧和右侧进行的查询，换句话说，当变量出现在赋值操作的左侧时进行 LHS 查询，出现在右侧时进行 RHS 查询。")]),v._v(" "),t("p",[v._v("针对"),t("code",[v._v("var a = b;")]),v._v("这段代码，会进行"),t("strong",[v._v("RHS")]),v._v("查询得到 "),t("code",[v._v("b")]),v._v(" 的值，进行"),t("strong",[v._v("LHS")]),v._v("查询是否存在变量 "),t("code",[v._v("a")]),v._v("，从而进行赋值。")]),v._v(" "),t("p",[v._v("准确的说，RHS 查询与简单地查找某个变量的值相同，而 LHS 查询则是试图找到变量的容器本身，从而可以对其赋值。")]),v._v(" "),t("p",[v._v("从这个角度说，RHS 并不是真正意义上的“赋值操作的右侧”，更准确地说是“非左侧”。")]),v._v(" "),t("p",[v._v("针对代码:")]),v._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[v._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("function")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("foo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[v._v("a")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v("  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v(" a "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 2")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("3")]),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("4")]),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("foo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("2")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br")])]),t("ul",[t("li",[t("p",[v._v("第4行中需要对foo进行"),t("strong",[v._v("RHS")]),v._v("查询，得到foo函数；")])]),v._v(" "),t("li",[t("p",[v._v("第1行中a作为型参，当调用foo函数时，会隐式地有 "),t("code",[v._v("a = 2")]),v._v("的操作，因此，这里要对a进行"),t("strong",[v._v("LHS")]),v._v("查询。")])]),v._v(" "),t("li",[t("p",[v._v("第2行中，需要对a进行"),t("strong",[v._v("RHS")]),v._v("查询从而将a的值传给"),t("code",[v._v("console.log")]),v._v("。")]),v._v(" "),t("p",[v._v("当然，要得到 "),t("code",[v._v("log")]),v._v(" 函数，会对 console 对象进行 "),t("strong",[v._v("RHS")]),v._v(" 查询，并且检查得到的值中是否有一个叫作 log 的方法。")])])]),v._v(" "),t("h3",{attrs:{id:"作用域嵌套"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#作用域嵌套"}},[v._v("#")]),v._v(" 作用域嵌套")]),v._v(" "),t("p",[v._v("我们说过，"),t("strong",[v._v("作用域是根据名称查找变量的一套规则")]),v._v("。实际情况中，通常需要同时顾及几个作用域。")]),v._v(" "),t("p",[v._v("当一个块或函数嵌套在另一个块或函数中时，就发生了作用域的嵌套。因此，在当前作用域中无法找到某个变量时，引擎就会在外层嵌套的作用域中继续查找，直到找到该变量， 或抵达最外层的作用域(也就是全局作用域)为止。")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://tva1.sinaimg.cn/large/0081Kckwgy1gmbpi4c04aj30bm06yq31.jpg",alt:"image-20210104154329370"}})]),v._v(" "),t("h4",{attrs:{id:"作用域相关的异常"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#作用域相关的异常"}},[v._v("#")]),v._v(" 作用域相关的异常")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("如果"),t("strong",[v._v("RHS")]),v._v("在所有嵌套的作用域中找不到所需变量，那么会抛出一个 "),t("em",[t("strong",[v._v("ReferenceError")])]),v._v(" 异常，这是一个很重要的异常类型。")])]),v._v(" "),t("li",[t("p",[v._v("如果"),t("strong",[v._v("LHS")]),v._v("最终在全局作用域中找不到所需变量，那么")]),v._v(" "),t("ul",[t("li",[v._v("在"),t("strong",[v._v("非严格模式")]),v._v("下，"),t("strong",[v._v("全局作用域")]),v._v("中会创建一个同名变量并返回给引擎。")]),v._v(" "),t("li",[t("strong",[v._v("严格模式")]),v._v("下，不会创建全局变量，而是抛出 "),t("em",[t("strong",[v._v("ReferenceError")])]),v._v(" 异常。")])])]),v._v(" "),t("li",[t("p",[v._v("如果"),t("strong",[v._v("RHS")]),v._v("查询到一个变量，但是尝试对其进行错误操作，比如对一个非函数类型进行函数调用，则抛出 "),t("em",[t("strong",[v._v("TypeError")])]),v._v(" 异常。")])]),v._v(" "),t("li",[t("p",[t("em",[t("strong",[v._v("ReferenceError")])]),v._v(" 同作用域判别失败相关，而 "),t("em",[t("strong",[v._v("TypeError")])]),v._v(" 则代表作用域判别成功了，但是对结果的操作是非法或不合理的。")])])]),v._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),t("p",[v._v("作用域是一套规则，用于确定在何处以及如何查找变量(标识符)。")]),v._v(" "),t("p",[v._v("如果查找的目的是对变量进行赋值，那么就会使用 LHS 查询;如果目的是获取变量的值，就会使用 RHS 查询。")]),v._v(" "),t("p",[v._v("赋值操作符会导致 LHS 查询。"),t("code",[v._v("=")]),v._v(" 操作符或调用函数时传入参数的操作都会导致关联作用域的赋值操作。")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("JavaScript引擎首先会在代码执行前对其进行编译，在这个过程中，像 "),t("code",[v._v("var a = 2")]),v._v(" 这样的声明会被分解成两个独立的步骤:")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("首先，"),t("code",[v._v("var a")]),v._v(" 在其作用域中声明新变量。这会在最开始的阶段，也就是代码执行前进行。")])]),v._v(" "),t("li",[t("p",[v._v("接下来，"),t("code",[v._v("a = 2")]),v._v(" 会查询(LHS 查询)变量 "),t("code",[v._v("a")]),v._v(" 并对其进行赋值。")])])])]),v._v(" "),t("li",[t("p",[v._v("LHS 和 RHS 查询都会在当前执行作用域中开始，逐级往上，最后抵达全局作用域，无论找到或没找到都将停止。")])]),v._v(" "),t("li",[t("p",[v._v("不成功的 RHS 引用会导致抛出 "),t("em",[t("strong",[v._v("ReferenceError")])]),v._v(" 异常。不成功的 LHS 引用会导致自动隐式地创建一个全局变量("),t("strong",[v._v("非严格模式下")]),v._v(")，该变量使用 LHS 引用的目标作为标识符，或者抛出 "),t("em",[t("strong",[v._v("ReferenceError")])]),v._v(" 异常("),t("strong",[v._v("严格模式")]),v._v("下)。")])])])],1)}),[],!1,null,null,null);"function"==typeof e&&e(r);_.default=r.exports}}]);